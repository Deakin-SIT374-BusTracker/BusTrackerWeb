@model  IEnumerable<BusTrackerWeb.Models.DepartureModel>

@{ 
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-header">
    <h1><img style="max-width:50px; margin-top: -4px; margin-right: 10px; float:left;" src="~/Content/Images/bushop-logo.png">Your Journey</h1>
</div>

<div>
    <div class="row" style="width: 100%">
        <div class="col-md-6">
            <table id="scheduleTable" class="table table-striped">
                <tr>
                    <th>Bus Stop:</th>
                    <th>Departure Time:</th>
                </tr>
                
                @foreach (var departure in Model)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => departure.Stop.StopName)</td>
                        <td>@Html.DisplayFor(modelItem => departure.ScheduledDeparture)</td>
                    </tr>
                }
            </table>
        </div>
        <div class="col-md-6">
            <div id="map_canvas" style="min-height:40em; width:100%"></div>
        </div>
    </div>
</div>



<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCqZFelSFhnk3JDbFVx7qovf8IIG1ZViVs"></script>
<script type="text/javascript">
    function initGoogleMap() {
        // Initialise marker coordinates.
        var markerLatArray = @Html.Raw(Json.Encode(@ViewBag.LatPath));
        var markerLngArray = @Html.Raw(Json.Encode(@ViewBag.LngPath));

        // Find the map center marker.
        var centerIndex = Math.round(markerLatArray.length / 2)
        var centerLocation = new google.maps.LatLng(markerLatArray[centerIndex], markerLngArray[centerIndex]);

        // set map options.
        var options = {
            zoom: 14,
            center: centerLocation,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };

        // Update map with options.
        var map = new google.maps.Map(document.getElementById("map_canvas"), options);

        // Add map markers and set bounds.
        var bounds = new google.maps.LatLngBounds();

        for (var i = 0; i < markerLatArray.length; i++) {
            var newlocation = new google.maps.LatLng(markerLatArray[i], markerLngArray[i]);
            var newMarker = new google.maps.Marker({ position: newlocation, map: map, title: 'Marker 1' });
            bounds.extend(newMarker.getPosition());
        }
        
        map.fitBounds(bounds);

        // Add road polyline.
        //var drivePlanCoordinates = [latlng1, latlng2, latlng3];

        //var drivePath = new google.maps.Polyline({
        //    path: drivePlanCoordinates,
        //    geodesic: true,
        //    strokeColor: '#FF0000',
        //    strokeOpacity: 1.0,
        //    strokeWeight: 2
        //});

        //drivePath.setMap(map);

    }

    initGoogleMap();

</script>
